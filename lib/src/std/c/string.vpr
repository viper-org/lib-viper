namespace std {
    namespace c {
        export func @memchr(str: i8*, c: i32, count: i32) -> i8* {
            while (count > 0) {
                count -= 1;
                if (*str == (i8) c) {
                    return str;
                }
                str += 1;
            }

            return nullptr;
        }

        export func @memcmp(str1: i8*, str2: i8*, count: i32) -> i32 {
            while (count > 0) {
                count -= 1;
                if (*str1 != *str2) {
                    return (i32) (*str1 - *str2);
                }
                str1 += 1;
                str2 += 1;
            }

            return 0;
        }

        export func @memcpy(dest: i8*, src: i8*, count: i32) -> i8* {
            let original: i8* = dest;

            while (count > 0) {
                *dest = *src;
                count -= 1;
                dest += 1;
                src += 1;
            }

            return original;
        }

        export func @memset(ptr: i8*, value: i32, count: i32) -> i8* {
            while (count > 0) {
                *ptr = (i8) value;
                count -= 1;
                ptr += 1;
            }

            return ptr;
        }

        export func @strcat(dest: i8*, src: i8*) -> i8* {
            strcpy(dest + strlen(dest), src);
            return dest;
        }

        export func @strcmp(str1: i8*, str2: i8*) -> i32 {
            while (*str1 != 0) {
                if (*str1 != *str2) {
                    return (i32) (*str1 - *str2);
                }
                str1 += 1;
                str2 += 1;
            }

            return (i32) (*str1 - *str2);
        }

        export func @strcpy(dest: i8*, src: i8*) -> i8* {
            let original: i8* = dest;

            while (*dest != 0) {
                *dest = *src;
                dest += 1;
                src += 1;

                if (*src == 0)
                    break;
            }

            return original;
        }

        export func @strlen(str: i8*) -> i32 {
            let len: i32 = 0;
            while (*str != 0) {
                str += 1;
                len += 1;
            }
            return len;
        }
    }
}